<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

    <title>Student Database</title>
</head>

<body>
    <nav class="navbar navbar-expand-lg" style="background-color: #e6e6e6;">
        <div class="container-fluid" style="margin: 0px 20px;">
            <a class="navbar-brand playfair-display-1" href="#" style="font-size: xx-large;">Student Database</a>
        </div>
        <button type="button" class="btn btn-outline-success material-symbols-outlined" style="border-width: 3px; border-style: solid; border-radius: 30px; font-size: xx-large; margin:0px 20px; height: 40px; width: 40px; text-align: center; padding: 0%;" onclick="document.getElementById('addButton').click();">
            add
        </button>
    </nav>

    <table class="table table-striped text-center container table-dark" style="margin-top: 20px; margin-bottom: 100px;">
        <thead style="font-size: x-large; height: 60px; vertical-align: middle">
            <tr>
                <th><i>Roll No:</i></th>
                <th><i>Name:</i></th>
                <th><i>Degree:</i></th>
                <th><i>City:</i></th>
                <th><i>Changes:</i></th>
            </tr>
        </thead>
        <tbody>
            <% students.sort((a, b) => a.rollNo - b.rollNo).forEach((student) => { %>
                <tr>
                    <td style="width: 20vw; font-size: large; vertical-align: middle"><%= student.rollNo %></td>
                    <td style="width: 20vw; font-size: large; vertical-align: middle"><%= student.name %></td>
                    <td style="width: 20vw; font-size: large; vertical-align: middle"><%= student.degree %></td>
                    <td style="width: 20vw; font-size: large; vertical-align: middle"><%= student.city %></td>
                    <td style="width: 20vw;">
                        <button type="button" class="btn btn-outline-warning" style="width: 100px; margin-right: 10px;" data-bs-toggle="modal" data-bs-target="#updateModal" onclick="document.getElementById('updateRollNo').value  = `<%= student.rollNo %>`;"><b>Update</b></button>
                        <button type="button" class="btn btn-outline-danger delete-btn" style="width: 100px; margin-right: 10px;" data-rollno="<%= student.rollNo %>"><b>Delete</b></button>
                    </td>
                </tr>
            <% }) %>
        </tbody>        
    </table>

    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal" style="display: none;" id="addButton">
        Add Modal
    </button>

    <!-- Modal -->
    <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-3 playfair-display-1" id="addModalLabel">Add Student Data</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="/save" method="post" style="padding: 20px 20px;">
                        <div class="mb-3">
                            <label for="rollNo" class="form-label" style="font-size: large;">Roll Number:</label>
                            <input type="text" class="form-control" name="rollNo" id="rollNo" style="height: 40px;">
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label" style="font-size: large;">Name:</label>
                            <input type="text" class="form-control" name="name" id="name" style="height: 40px;">
                        </div>
                        <div class="mb-3">
                            <label for="degree" class="form-label" style="font-size: large;">Degree:</label>
                            <input type="text" class="form-control" name="degree" id="degree" style="height: 40px;">
                        </div>
                        <div class="mb-3">
                            <label for="city" class="form-label" style="font-size: large;">City:</label>
                            <input type="text" class="form-control" name="city" id="city" style="height: 40px;">
                        </div>
                        <button class="btn btn-outline-primary" type="submit" style="width: 100px; margin-top: 15px; left: 50%; position: relative; transform: translateX(-50%)">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-3 playfair-display-1" id="updateModalLabel">Update Student Data</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateForm" style="padding: 20px 20px;">
                        <div class="mb-3">
                            <label for="updateRollNo" class="form-label" style="font-size: large;">Roll Number:</label>
                            <input type="text" class="form-control" name="updateRollNo" id="updateRollNo" style="height: 40px;" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="updateName" class="form-label" style="font-size: large;">Name:</label>
                            <input type="text" class="form-control" name="updateName" id="updateName" style="height: 40px;">
                        </div>
                        <div class="mb-3">
                            <label for="updateDegree" class="form-label" style="font-size: large;">Degree:</label>
                            <input type="text" class="form-control" name="updateDegree" id="updateDegree" style="height: 40px;">
                        </div>
                        <div class="mb-3">
                            <label for="updateCity" class="form-label" style="font-size: large;">City:</label>
                            <input type="text" class="form-control" name="updateCity" id="updateCity" style="height: 40px;">
                        </div>
                        <button type="submit" class="btn btn-outline-primary" style="width: 100px; margin-top: 15px; left: 50%; position: relative; transform: translateX(-50%)">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <footer style="background-color: #f0f0f0; position: fixed; left: 0; bottom: 0; width: 100%; padding: 10px 0; text-align: center; height: 75px;">
        <div class="container">
            <p style="margin: 2.5px;">&copy; 2024 Student Database Project.</p>
            <p>Developed by Rohan Jha</p>
        </div>
    </footer>

    <script>
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function() {
                const rollNo = this.getAttribute('data-rollno');
                
                fetch(`/students/${rollNo}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Student deleted successfully:', data);
                    location.reload();
                })
                .catch(error => {
                    console.error('Error deleting student:', error.message);
                });
            });
        });

        document.querySelectorAll('.edit-btn').forEach(button => {
        button.addEventListener('click', function() {
            const rollNo = this.getAttribute('data-rollno');
            const name = this.getAttribute('data-name');
            const degree = this.getAttribute('data-degree');
            const city = this.getAttribute('data-city');
            
            document.getElementById('updateRollNo').value = rollNo;
            document.getElementById('updateName').value = name;
            document.getElementById('updateDegree').value = degree;
            document.getElementById('updateCity').value = city;

            $('#updateModal').modal('show');
        });
    });

    document.getElementById('updateForm').addEventListener('submit', function(event) {
        event.preventDefault();
        
        const rollNo = document.getElementById('updateRollNo').value;
        const name = document.getElementById('updateName').value;
        const degree = document.getElementById('updateDegree').value;
        const city = document.getElementById('updateCity').value;

        fetch(`/students/${rollNo}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({rollNo, name, degree, city})
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log('Student updated successfully:', data);
            location.reload();
        })
        .catch(error => {
            console.error('Error Updating Student');
        });
    });
    </script>

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap');

        .playfair-display-1 {
            font-family: "Playfair Display", serif;
            font-optical-sizing: auto;
            font-weight: bold;
            font-style: normal;
            font-size: xx-large;
        }

        button:hover{
            transform: scale(1.05);
            transition: 0.25s ease;
        }
    </style>
</body>
</html>